{"file":"team-content-qo1vReTa.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA6ImB,YAAO;AAC1B,UAAM,EAAE,gBAAe,IAAK,OAAM;AAClC,UAAM,gBAAe,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,gBAAe,CAAC;AAG3C,UAAM,kBAAkB,IAAI,IAAI;AAGhC,UAAM,WAAW,SAAS;AAAA;AAAA,MAExB,WAAW,EAAE,IAAI,IAAI,IAAI,GAAE;AAAA,MAC3B,cAAc,EAAE,IAAI,IAAI,IAAI,GAAE;AAAA;AAAA,MAE9B,WAAW;AAAA,IACb,CAAC;AAGD,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,SAAS,IAAI,KAAK;AACxB,UAAM,iBAAiB,IAAI,EAAE;AAC7B,UAAM,eAAe,IAAI,EAAE;AAuE3B,UAAM,CAAC,gBAAgB,YAAY,GAAG,MAAM;AAC1C,UAAI,eAAe,SAAS,aAAa,OAAO;AAC9C,mBAAW,MAAM;AACf,yBAAe,QAAQ;AACvB,uBAAa,QAAQ;AAAA,QACvB,GAAG,GAAI;AAAA,MACT;AAAA,IACF,CAAC;AAGD,eAAW;AAAA,MACT,OAAO,uBAAuB,aAAa,QAAQ;AAAA,MACnD,QAAQ;AAAA,IACV,CAAC;;;;AApPM,YAAA,OAAAC,eAAAC,WAAA,EAAA,OAAM,6BAAyB,MAAA,CAAA,CAAA,6LAAA;;QAMhB,IAAG;AAAA,QAAqB,OAAM;AAAA;yBAAxC,CAIW,GAAAC,QAAAC,UAAA,aAAA;;;;;4BAHTC,YAEM,OAAA;AAAA,gBAFD,OAAM;AAAA,gBAAU,MAAK;AAAA,gBAAO,QAAO;AAAA,gBAAe,SAAQ;AAAA;gBAC7DC,YAA6G,QAAA;AAAA,kBAAvG,kBAAe;AAAA,kBAAQ,mBAAgB;AAAA,kBAAQ,gBAAa;AAAA,kBAAI,GAAE;AAAA;;;;;;;;;QAOlE,IAAG;AAAA,QAAmB,QAAO;AAAA,QAAS,OAAM;AAAA;yBAAtD,CAA0F,GAAAH,QAAAC,UAAA,aAAA;;;;;8BAApB,WAAS;AAAA;;;;;;UAS1EG,MAAA,OAAA,GAAO;;;qQAYFA,MAAA,eAAA,MAAe,OAAA,qCAAA,qCAAA,4DAAA,CAAA,0EAQfA,MAAA,eAAA,MAAe,OAAA,qCAAA,qCAAA,4DAAA,CAAA,qIAQkBA,MAAA,eAAA,MAAe,OAAA,4BAAA,0BAAA;;WAKnDA,MAAA,OAAA,GAAO;2MAQDA,MAAA,QAAA,EAAS,UAAUA,MAAA,eAAA,CAAe,CAAA,4GAMAC,eAAAD,MAAA,eAAA,EAAgB,YAAW,CAAA,wIAK7DA,MAAA,QAAA,EAAS,aAAaA,MAAA,eAAA,CAAe,CAAA,4DAMAC,eAAAD,MAAA,eAAA,EAAgB,YAAW,CAAA;;UAOhE,YAAAA,MAAA,QAAA,EAAS;AAAA,UAAT,uBAAA,YAAAA,MAAA,QAAA,EAAS,YAAS;AAAA,UAC3B,OAAM;AAAA,UACN,aAAU;AAAA;;;UAQN,IAAG;AAAA,UAAqB,OAAM;AAAA;2BAAxC,CAAyE,GAAAJ,QAAAC,UAAA,aAAA;;;;;gCAAjB,QAAM;AAAA;;;;;4DAGjDG,MAAA,MAAA,CAAM,IAAA,cAAA,yCAGdA,MAAA,MAAA,IAAM,cAAA,cAAA;;;;;UAONA,MAAA,cAAA,GAAc;6aAKoBA,MAAA,cAAA,CAAc,CAAA,kBAAA;AAAA;;;UAIhDA,MAAA,YAAA,GAAY;yaAKoBA,MAAA,YAAA,CAAY,CAAA,kBAAA;AAAA;;;;;;;;;;;;;","names":["_withAsyncContext","_ssrRenderAttrs","_mergeProps","_push","_parent","_createBlock","_createVNode","_unref","_ssrInterpolate"],"sources":["../../../../../digital-agency/pages/agency-cms/manage/team-content.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- Navigation -->\n    <nav class=\"bg-white shadow-sm border-b\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center py-4\">\n          <div class=\"flex items-center space-x-4\">\n            <NuxtLink to=\"/agency-cms/manage\" class=\"text-blue-600 hover:text-blue-500\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path>\n              </svg>\n            </NuxtLink>\n            <h1 class=\"text-xl font-semibold text-gray-900\">Edit Team Page Content</h1>\n          </div>\n          \n          <div class=\"flex items-center space-x-4\">\n            <NuxtLink to=\"/agency-cms/team\" target=\"_blank\" class=\"btn-secondary\">View Live</NuxtLink>\n            <button @click=\"handleLogout\" class=\"btn-secondary\">Logout</button>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Loading State -->\n      <div v-if=\"loading\" class=\"flex justify-center items-center h-64\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- Language Switcher -->\n      <div v-else class=\"card p-4 mb-8\">\n        <div class=\"flex items-center justify-between\">\n          <h3 class=\"text-lg font-medium text-gray-900\">Content Language</h3>\n          <div class=\"flex items-center bg-gray-100 rounded-lg p-1\">\n            <button \n              @click=\"currentLanguage = 'en'\"\n              type=\"button\"\n              :class=\"currentLanguage === 'en' ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'\"\n              class=\"px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n            >\n              üá∫üá∏ English\n            </button>\n            <button \n              @click=\"currentLanguage = 'th'\"\n              type=\"button\"\n              :class=\"currentLanguage === 'th' ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'\"\n              class=\"px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n            >\n              üáπüá≠ ‡πÑ‡∏ó‡∏¢\n            </button>\n          </div>\n        </div>\n        <p class=\"text-sm text-gray-500 mt-2\">\n          Switch between languages to edit content. {{ currentLanguage === 'en' ? 'Editing English content' : '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢' }}\n        </p>\n      </div>\n\n      <!-- Form -->\n      <form v-if=\"!loading\" @submit.prevent=\"handleSubmit\" class=\"space-y-8\">\n        <!-- Hero Section -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Hero Section</h2>\n          \n          <div class=\"space-y-6\">\n            <div class=\"relative\">\n              <input \n                v-model=\"formData.heroTitle[currentLanguage]\" \n                type=\"text\" \n                placeholder=\" \" \n                class=\"form-input peer\"\n                required\n              >\n              <label class=\"floating-label\">Hero Title ({{ currentLanguage.toUpperCase() }})</label>\n            </div>\n\n            <div class=\"relative\">\n              <textarea \n                v-model=\"formData.heroSubtitle[currentLanguage]\" \n                placeholder=\" \" \n                rows=\"3\" \n                class=\"form-input resize-none peer\"\n                required\n              ></textarea>\n              <label class=\"floating-label\">Hero Subtitle ({{ currentLanguage.toUpperCase() }})</label>\n            </div>\n            \n            <!-- Hero Background Image -->\n            <div>\n              <label class=\"form-label\">Hero Background Image</label>\n              <ImageUpload \n                v-model=\"formData.heroImage\" \n                label=\"Hero Section Background (optional)\"\n                help-text=\"Recommended: High-quality image, 1920x1080px or larger. Will be used as background for the hero section.\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <!-- Save Button -->\n        <div class=\"flex justify-end space-x-4\">\n          <NuxtLink to=\"/agency-cms/manage\" class=\"btn-secondary\">Cancel</NuxtLink>\n          <button \n            type=\"submit\" \n            :disabled=\"saving\"\n            class=\"btn-primary\"\n          >\n            {{ saving ? 'Saving...' : 'Save Changes' }}\n          </button>\n        </div>\n      </form>\n    </div>\n\n    <!-- Success/Error Messages -->\n    <div v-if=\"successMessage\" class=\"fixed top-20 right-4 p-4 bg-green-50 border border-green-200 rounded-lg shadow-xl z-50\">\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-green-700 font-medium\">{{ successMessage }}</p>\n      </div>\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"fixed top-20 right-4 p-4 bg-red-50 border border-red-200 rounded-lg shadow-xl z-50\">\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-red-700 font-medium\">{{ errorMessage }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { API_ENDPOINTS, buildApiUrl } from '~/constants/api'\n\ndefinePageMeta({\n  middleware: 'auth',\n  layout: false\n})\n\nconst { logout } = useAuth()\nconst { getSiteSettings } = useCMS()\nconst siteSettings = await getSiteSettings()\n\n// Language state\nconst currentLanguage = ref('en')\n\n// Multi-language form data\nconst formData = reactive({\n  // Text fields as JSON {en: \"English\", th: \"Thai\"}\n  heroTitle: { en: '', th: '' },\n  heroSubtitle: { en: '', th: '' },\n  // Images (language-neutral)\n  heroImage: ''\n})\n\n// Component state\nconst loading = ref(true)\nconst saving = ref(false)\nconst successMessage = ref('')\nconst errorMessage = ref('')\n\n// Load existing content\nonMounted(async () => {\n  await loadContent()\n})\n\n// Helper function to parse JSON with fallback\nconst parseJsonField = (jsonString, fallback) => {\n  try {\n    const parsed = JSON.parse(jsonString || '{}')\n    return typeof parsed === 'object' && parsed !== null ? parsed : fallback\n  } catch {\n    return fallback\n  }\n}\n\nconst loadContent = async () => {\n  try {\n    const response = await $fetch(buildApiUrl(API_ENDPOINTS.CMS.TEAM_CONTENT.GET))\n    \n    if (response) {\n      // Parse multi-language text fields\n      formData.heroTitle = parseJsonField(response.heroTitle, { en: '', th: '' })\n      formData.heroSubtitle = parseJsonField(response.heroSubtitle, { en: '', th: '' })\n      \n      // Images (language-neutral)\n      formData.heroImage = response.heroImage || ''\n    }\n  } catch (error) {\n    errorMessage.value = 'Failed to load content'\n    console.error('Failed to load content:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst handleSubmit = async () => {\n  saving.value = true\n  successMessage.value = ''\n  errorMessage.value = ''\n\n  try {\n    // Prepare form data with JSON stringified multi-language fields\n    const submitData = {\n      // Text fields as JSON strings\n      heroTitle: JSON.stringify(formData.heroTitle),\n      heroSubtitle: JSON.stringify(formData.heroSubtitle),\n      // Images (language-neutral)\n      heroImage: formData.heroImage\n    }\n\n    await $fetch(buildApiUrl(API_ENDPOINTS.CMS.TEAM_CONTENT.POST), {\n      method: 'POST',\n      body: submitData\n    })\n\n    successMessage.value = 'Team page content updated successfully!'\n  } catch (error) {\n    errorMessage.value = 'Failed to update content. Please try again.'\n    console.error('Failed to update content:', error)\n  } finally {\n    saving.value = false\n  }\n}\n\nconst handleLogout = async () => {\n  await logout()\n}\n\n// Clear messages after 5 seconds\nwatch([successMessage, errorMessage], () => {\n  if (successMessage.value || errorMessage.value) {\n    setTimeout(() => {\n      successMessage.value = ''\n      errorMessage.value = ''\n    }, 5000)\n  }\n})\n\n// SEO\nuseSeoMeta({\n  title: `Edit Team Content | ${siteSettings.siteName} CMS`,\n  robots: 'noindex, nofollow'\n})\n</script>"],"version":3}
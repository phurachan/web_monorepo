{"version":3,"file":"auth-simple-BSt1E7f_.js","sources":["../../../../../digital-agency/middleware/auth-simple.ts"],"sourcesContent":["export default defineNuxtRouteMiddleware(async (to, from) => {\n  // Only protect /agency-cms/manage routes\n  if (!to.path.startsWith('/agency-cms/manage')) {\n    return\n  }\n\n  // Skip middleware on server side during SSR\n  if (import.meta.server) return\n\n  console.log('Simple auth middleware: Checking authentication for:', to.path)\n\n  // If coming from login, add a small delay to ensure cookies are set\n  if (from?.path === '/login') {\n    console.log('Coming from login, waiting for cookies to be set...')\n    await new Promise(resolve => setTimeout(resolve, 500))\n  }\n\n  try {\n    // First check the client-accessible auth status cookie\n    const authStatus = useCookie('auth-status')\n    \n    if (authStatus.value === 'authenticated') {\n      console.log('Simple auth middleware: Auth status cookie found, user is authenticated')\n      return // Allow access\n    }\n\n    console.log('Simple auth middleware: No auth status cookie, checking API...')\n    \n    // Fallback to API check - use navigateTo with external check\n    const response = await fetch('/api/agency-cms/auth/me', {\n      credentials: 'include'\n    }).then(res => res.json())\n    \n    if (!response?.user) {\n      console.log('Simple auth middleware: No user found in API response')\n      return navigateTo('/agency-cms/login', { replace: true })\n    }\n\n    console.log('Simple auth middleware: User authenticated via API:', response.user.email)\n  } catch (error: any) {\n    console.log('Simple auth middleware: Authentication failed:', error.data?.message || error.message || error)\n    return navigateTo('/agency-cms/login', { replace: true })\n  }\n})"],"names":[],"mappings":";;;;;;;;;;;;;AAEE,MAAA,aAAa,iCAA+B,IAAG,SAAA;AAC7C,MAAA,CAAA,GAAA,KAAA,WAAA,oBAAA,GAAA;AACF;AAAA,EAGA;AAEQ;;"}
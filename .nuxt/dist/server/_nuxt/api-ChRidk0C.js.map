{"version":3,"file":"api-ChRidk0C.js","sources":["../../../../node_modules/nuxt/dist/app/composables/state.js","../../../../../digital-agency/constants/api.ts"],"sourcesContent":["import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxtApp = useNuxtApp();\n  const state = toRef(nuxtApp.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxtApp.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","// API Base URL Configuration\nexport const API_CONFIG = {\n  // Base URL for API endpoints - will be dynamically set from runtime config\n  get BASE_URL() {\n    // For server-side or when nuxtApp is not available, use default\n    if (import.meta.server) {\n      return '/api/agency-cms'\n    }\n\n    // For client-side, try to get from runtime config\n    try {\n      const { $config } = useNuxtApp()\n      return $config.public.apiBase || '/api/agency-cms'\n    } catch {\n      return '/api/agency-cms'\n    }\n  },\n\n  // API version (for future use)\n  VERSION: 'v1',\n\n  // Timeout configurations\n  TIMEOUT: {\n    DEFAULT: 10000, // 10 seconds\n    UPLOAD: 30000,  // 30 seconds for file uploads\n    AUTH: 5000      // 5 seconds for auth operations\n  }\n} as const\n\n// API Endpoints Constants\nexport const API_ENDPOINTS = {\n  // Authentication endpoints\n  AUTH: {\n    LOGIN: '/auth/login',\n    LOGOUT: '/auth/logout',\n    SETUP: '/auth/setup',\n    ME: '/auth/me',\n    REFRESH: '/auth/refresh'\n  },\n\n  // CMS Content Management endpoints\n  CMS: {\n    // Home page content\n    HOME_CONTENT: {\n      GET: '/cms/home-content',\n      POST: '/cms/home-content'\n    },\n\n    // Services management\n    SERVICES: {\n      GET: '/cms/services',\n      POST: '/cms/services',\n      PUT: (id: string) => `/cms/services/${id}`,\n      DELETE: (id: string) => `/cms/services/${id}`\n    },\n\n    // Services page content\n    SERVICES_CONTENT: {\n      GET: '/cms/services-content',\n      POST: '/cms/services-content'\n    },\n\n    // About page content\n    ABOUT_CONTENT: {\n      GET: '/cms/about-content',\n      POST: '/cms/about-content'\n    },\n\n    // Team management\n    TEAM: {\n      GET: '/cms/team',\n      POST: '/cms/team',\n      PUT: (id: string) => `/cms/team/${id}`,\n      DELETE: (id: string) => `/cms/team/${id}`\n    },\n\n    // Team page content\n    TEAM_CONTENT: {\n      GET: '/cms/team-content',\n      POST: '/cms/team-content'\n    },\n\n    // Contact page content\n    CONTACT_CONTENT: {\n      GET: '/cms/contact-content',\n      POST: '/cms/contact-content'\n    },\n\n    // FAQ management\n    FAQS: {\n      GET: '/cms/faqs',\n      POST: '/cms/faqs',\n      PUT: (id: string) => `/cms/faqs/${id}`,\n      DELETE: (id: string) => `/cms/faqs/${id}`\n    },\n\n    // Site settings\n    SITE_SETTINGS: {\n      GET: '/cms/site-settings',\n      POST: '/cms/site-settings'\n    }\n  },\n\n  // File upload endpoints\n  UPLOAD: {\n    IMAGE: '/upload/image',\n    FILE: '/upload/file',\n    AVATAR: '/upload/avatar'\n  },\n\n  // Analytics endpoints (for future use)\n  ANALYTICS: {\n    DASHBOARD: '/analytics/dashboard',\n    TRAFFIC: '/analytics/traffic',\n    CONVERSIONS: '/analytics/conversions'\n  }\n} as const\n\n// Helper function to build full API URL\nexport const buildApiUrl = (endpoint: string, baseUrl?: string): string => {\n  const base = baseUrl || API_CONFIG.BASE_URL\n  return `${base}${endpoint}`\n}\n\n// Helper function to build CMS endpoint URLs\nexport const buildCmsUrl = (endpoint: string): string => {\n  return buildApiUrl(endpoint)\n}\n\n// Type definitions for better TypeScript support\nexport type ApiEndpoint = typeof API_ENDPOINTS\nexport type AuthEndpoint = typeof API_ENDPOINTS.AUTH\nexport type CmsEndpoint = typeof API_ENDPOINTS.CMS\nexport type UploadEndpoint = typeof API_ENDPOINTS.UPLOAD\n\n// HTTP Methods constants\nexport const HTTP_METHODS = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n  PATCH: 'PATCH'\n} as const\n\n// HTTP Status codes\nexport const HTTP_STATUS = {\n  OK: 200,\n  CREATED: 201,\n  NO_CONTENT: 204,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  INTERNAL_SERVER_ERROR: 500\n} as const\n\n// Request headers\nexport const REQUEST_HEADERS = {\n  CONTENT_TYPE: {\n    JSON: 'application/json',\n    FORM_DATA: 'multipart/form-data',\n    URL_ENCODED: 'application/x-www-form-urlencoded'\n  },\n  AUTHORIZATION: 'Authorization',\n  X_REQUESTED_WITH: 'X-Requested-With'\n} as const"],"names":[],"mappings":";;;AAGA,MAAM,oBAAoB;AACnB,SAAS,YAAY,MAAM;AAChC,QAAM,UAAU,OAAO,KAAK,KAAK,SAAS,CAAC,MAAM,WAAW,KAAK,IAAG,IAAK;AACzE,MAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,SAAK,QAAQ,OAAO;AAAA,EACtB;AACA,QAAM,CAAC,MAAM,IAAI,IAAI;AACrB,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,UAAU,6CAA6C,IAAI;AAAA,EACvE;AACA,MAAI,SAAS,UAAU,OAAO,SAAS,YAAY;AACjD,UAAM,IAAI,MAAM,gDAAgD,IAAI;AAAA,EACtE;AACA,QAAM,MAAM,oBAAoB;AAChC,QAAM,UAAU,WAAU;AAC1B,QAAM,QAAQ,MAAM,QAAQ,QAAQ,OAAO,GAAG;AAC9C,MAAI,MAAM,UAAU,UAAU,MAAM;AAClC,UAAM,eAAe,KAAI;AACzB,QAAI,MAAM,YAAY,GAAG;AACvB,cAAQ,QAAQ,MAAM,GAAG,IAAI;AAC7B,aAAO;AAAA,IACT;AACA,UAAM,QAAQ;AAAA,EAChB;AACA,SAAO;AACT;AC3BO,MAAM,aAAa;AAAA;AAAA,EAExB,IAAI,WAAW;AAEW;AACtB,aAAO;AAAA,IACT;AAAA,EASF;AAWF;AAGO,MAAM,gBAAgB;AAAA;AAAA,EAE3B,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,IAAI;AAAA,IACJ,SAAS;AAAA,EAAA;AAAA;AAAA,EAIX,KAAK;AAAA;AAAA,IAEH,cAAc;AAAA,MACZ,KAAK;AAAA,MACL,MAAM;AAAA,IAAA;AAAA;AAAA,IAIR,UAAU;AAAA,MACR,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK,CAAC,OAAe,iBAAiB,EAAE;AAAA,MACxC,QAAQ,CAAC,OAAe,iBAAiB,EAAE;AAAA,IAAA;AAAA;AAAA,IAI7C,kBAAkB;AAAA,MAChB,KAAK;AAAA,MACL,MAAM;AAAA,IAAA;AAAA;AAAA,IAIR,eAAe;AAAA,MACb,KAAK;AAAA,MACL,MAAM;AAAA,IAAA;AAAA;AAAA,IAIR,MAAM;AAAA,MACJ,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK,CAAC,OAAe,aAAa,EAAE;AAAA,MACpC,QAAQ,CAAC,OAAe,aAAa,EAAE;AAAA,IAAA;AAAA;AAAA,IAIzC,cAAc;AAAA,MACZ,KAAK;AAAA,MACL,MAAM;AAAA,IAAA;AAAA;AAAA,IAIR,iBAAiB;AAAA,MACf,KAAK;AAAA,MACL,MAAM;AAAA,IAAA;AAAA;AAAA,IAIR,MAAM;AAAA,MACJ,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK,CAAC,OAAe,aAAa,EAAE;AAAA,MACpC,QAAQ,CAAC,OAAe,aAAa,EAAE;AAAA,IAAA;AAAA;AAAA,IAIzC,eAAe;AAAA,MACb,KAAK;AAAA,MACL,MAAM;AAAA,IAAA;AAAA,EACR;AAAA;AAAA,EAIF,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,EAAA;AAAA;AAAA,EAIV,WAAW;AAAA,IACT,WAAW;AAAA,IACX,SAAS;AAAA,IACT,aAAa;AAAA,EAAA;AAEjB;AAGO,MAAM,cAAc,CAAC,UAAkB,YAA6B;AACzE,QAAM,OAAkB,WAAW;AACnC,SAAO,GAAG,IAAI,GAAG,QAAQ;AAC3B;","x_google_ignoreList":[0]}
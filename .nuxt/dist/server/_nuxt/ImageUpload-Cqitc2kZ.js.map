{"version":3,"file":"ImageUpload-Cqitc2kZ.js","sources":["../../../../../digital-agency/components/ImageUpload.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-4\">\n    <div class=\"flex items-center justify-between\">\n      <label class=\"block text-sm font-medium text-gray-700\">{{ label }}</label>\n      <button\n        v-if=\"modelValue\"\n        @click=\"removeImage\"\n        type=\"button\"\n        class=\"text-sm text-red-600 hover:text-red-500\"\n      >\n        Remove\n      </button>\n    </div>\n\n    <!-- Upload Area -->\n    <div\n      v-if=\"!modelValue\"\n      @click=\"triggerUpload\"\n      @dragover.prevent\n      @drop.prevent=\"handleDrop\"\n      class=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 cursor-pointer transition-colors\"\n      :class=\"{ 'border-blue-400 bg-blue-50': isDragging }\"\n    >\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n        <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n      <div class=\"mt-2\">\n        <p class=\"text-sm text-gray-600\">\n          <span class=\"font-medium text-blue-600\">Click to upload</span> or drag and drop\n        </p>\n        <p class=\"text-xs text-gray-500\">PNG, JPG, GIF up to 5MB</p>\n      </div>\n    </div>\n\n    <!-- Image Preview -->\n    <div v-else class=\"relative\">\n      <img\n        :src=\"modelValue\"\n        :alt=\"label\"\n        class=\"w-full h-48 object-cover rounded-lg border\"\n        @error=\"handleImageError\"\n      >\n      <div class=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 hover:opacity-100 transition-opacity rounded-lg flex items-center justify-center\">\n        <button\n          @click=\"triggerUpload\"\n          class=\"bg-white text-gray-900 px-4 py-2 rounded-lg text-sm font-medium\"\n        >\n          Change Image\n        </button>\n      </div>\n    </div>\n\n    <!-- URL Input Alternative -->\n    <div class=\"relative\">\n      <input\n        :value=\"modelValue\"\n        @input=\"$emit('update:modelValue', ($event.target as HTMLInputElement)?.value)\"\n        type=\"text\"\n        placeholder=\"Or enter image URL\"\n        class=\"form-input\"\n      >\n    </div>\n\n    <!-- Hidden file input -->\n    <input\n      ref=\"fileInput\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"handleFileSelect\"\n      class=\"hidden\"\n    >\n\n    <!-- Upload Progress -->\n    <div v-if=\"uploading\" class=\"flex items-center space-x-2\">\n      <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n      <span class=\"text-sm text-gray-600\">Uploading...</span>\n    </div>\n\n    <!-- Error Message -->\n    <div v-if=\"error\" class=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\n      <p class=\"text-red-700 text-sm\">{{ error }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { API_ENDPOINTS, buildApiUrl } from '~/constants/api'\n\ninterface Props {\n  modelValue?: string\n  label?: string\n}\n\ninterface Emits {\n  (e: 'update:modelValue', value: string): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  label: 'Image'\n})\n\nconst emit = defineEmits<Emits>()\n\nconst fileInput = ref<HTMLInputElement>()\nconst uploading = ref(false)\nconst error = ref('')\nconst isDragging = ref(false)\n\nconst triggerUpload = () => {\n  fileInput.value?.click()\n}\n\nconst handleFileSelect = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (target.files && target.files[0]) {\n    uploadFile(target.files[0])\n  }\n}\n\nconst handleDrop = (event: DragEvent) => {\n  isDragging.value = false\n  \n  if (event.dataTransfer?.files && event.dataTransfer.files[0]) {\n    uploadFile(event.dataTransfer.files[0])\n  }\n}\n\nconst uploadFile = async (file: File) => {\n  error.value = ''\n  uploading.value = true\n\n  try {\n    // Validate file\n    if (!file.type.startsWith('image/')) {\n      throw new Error('Please select an image file')\n    }\n\n    if (file.size > 5 * 1024 * 1024) {\n      throw new Error('File too large. Maximum size is 5MB')\n    }\n\n    // Create form data\n    const formData = new FormData()\n    formData.append('file', file)\n\n    // Upload file\n    // const { $fetch } = useNuxtApp()\n    const response = await $fetch(buildApiUrl(API_ENDPOINTS.UPLOAD.IMAGE), {\n      method: 'POST',\n      body: formData\n    })\n\n    if (response.success) {\n      // Emit the new URL\n      emit('update:modelValue', response.url)\n    } else {\n      throw new Error('Upload failed')\n    }\n  } catch (err: any) {\n    error.value = err.message || 'Upload failed'\n  } finally {\n    uploading.value = false\n  }\n}\n\nconst removeImage = () => {\n  emit('update:modelValue', '')\n}\n\nconst handleImageError = (event: Event) => {\n  const target = event.target as HTMLImageElement\n  target.src = 'https://via.placeholder.com/400x200/f3f4f6/9ca3af?text=Invalid+Image'\n}\n\n// Drag and drop handlers\nconst handleDragOver = () => {\n  isDragging.value = true\n}\n\nconst handleDragLeave = () => {\n  isDragging.value = false\n}\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","label","modelValue","_unref","_ssrRenderAttr"],"mappings":";;;;;;;;;;;;AAuGkB,QAAA;AAClB,UAAM,YAAY,IAAI,KAAK;AAC3B,UAAM,QAAQ,IAAI,EAAE;AACpB,UAAM,aAAa,IAAI,KAAK;;mBAzGrBA,eAAAC,WAAA,EAAA,OAAM,YAAA,GAAW,MAAA,CAAA,0HAEwCC,KAAAA,KAAK;UAEvDC,KAAAA,YAAU;;;;;;WAWXA,KAAAA,YAAU;6EAKuBC,MAAA,UAAA,EAAA,GAAU,0HAAA,CAAA,CAAA,okBAAA;AAAA;2CAgB/CC,cAAA,OAAKF,KAAAA,UAAU,IACfE,cAAA,OAAKH,KAAAA,KAAK;;AAiBV,YAAA,+BAAAG,cAAA,SAAOF,KAAAA,UAAU,CAAA,4HAAA;UAkBXC,MAAA,SAAA,GAAS;;;;;UAMTA,MAAA,KAAA,GAAK;4HACqBA,MAAA,KAAA,CAAK,CAAA,YAAA;AAAA;;;;;;;;;;;;;"}
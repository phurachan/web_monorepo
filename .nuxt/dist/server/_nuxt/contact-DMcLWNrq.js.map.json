{"file":"contact-DMcLWNrq.js","mappings":"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","names":["_withAsyncContext","_ssrRenderAttrs","_mergeProps","_push","_parent","_createBlock","_createVNode","_unref","_ssrInterpolate","_ssrRenderAttr","form"],"sources":["../../../../../digital-agency/pages/agency-cms/manage/contact.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- Navigation -->\n    <nav class=\"bg-white shadow-sm border-b\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center py-4\">\n          <div class=\"flex items-center space-x-4\">\n            <NuxtLink to=\"/agency-cms/manage\" class=\"text-blue-600 hover:text-blue-500\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path>\n              </svg>\n            </NuxtLink>\n            <h1 class=\"text-xl font-semibold text-gray-900\">Edit Contact Page</h1>\n          </div>\n          \n          <div class=\"flex items-center space-x-4\">\n            <NuxtLink to=\"/agency-cms/contact\" target=\"_blank\" class=\"btn-secondary\">View Live</NuxtLink>\n            <button @click=\"handleLogout\" class=\"btn-secondary\">Logout</button>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Loading State -->\n      <div v-if=\"loading\" class=\"flex justify-center items-center h-64\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- Language Switcher -->\n      <div v-else class=\"card p-4 mb-8\">\n        <div class=\"flex items-center justify-between\">\n          <h3 class=\"text-lg font-medium text-gray-900\">Content Language</h3>\n          <div class=\"flex items-center bg-gray-100 rounded-lg p-1\">\n            <button \n              @click=\"currentLanguage = 'en'\"\n              type=\"button\"\n              :class=\"currentLanguage === 'en' ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'\"\n              class=\"px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n            >\n              üá∫üá∏ English\n            </button>\n            <button \n              @click=\"currentLanguage = 'th'\"\n              type=\"button\"\n              :class=\"currentLanguage === 'th' ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'\"\n              class=\"px-4 py-2 rounded-md text-sm font-medium transition-colors\"\n            >\n              üáπüá≠ ‡πÑ‡∏ó‡∏¢\n            </button>\n          </div>\n        </div>\n        <p class=\"text-sm text-gray-500 mt-2\">\n          Switch between languages to edit content. {{ currentLanguage === 'en' ? 'Editing English content' : '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢' }}\n        </p>\n      </div>\n\n      <!-- Form -->\n      <form v-if=\"!loading\" @submit.prevent=\"handleSubmit\" class=\"space-y-8\">\n        <!-- Banner Image -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Banner Image</h2>\n          <ImageUpload \n            v-model=\"formData.bannerImage\" \n            label=\"Contact Page Banner (optional)\"\n          />\n        </div>\n\n        <!-- Hero Background Image -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Hero Background Image</h2>\n          <ImageUpload \n            v-model=\"formData.heroImage\" \n            label=\"Hero Section Background (optional)\"\n            help-text=\"Recommended: High-quality image, 1920x1080px or larger. Will be used as background for the hero section.\"\n          />\n        </div>\n\n        <!-- Page Content -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Page Content</h2>\n          \n          <div class=\"space-y-6\">\n            <div class=\"relative\">\n              <input \n                v-model=\"formData.title[currentLanguage]\" \n                type=\"text\" \n                placeholder=\" \" \n                class=\"form-input peer\"\n                required\n              >\n              <label class=\"floating-label\">Page Title ({{ currentLanguage.toUpperCase() }})</label>\n            </div>\n\n            <div class=\"relative\">\n              <textarea \n                v-model=\"formData.subtitle[currentLanguage]\" \n                placeholder=\" \" \n                rows=\"3\" \n                class=\"form-input resize-none peer\"\n                required\n              ></textarea>\n              <label class=\"floating-label\">Page Subtitle ({{ currentLanguage.toUpperCase() }})</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Contact Information -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Contact Information</h2>\n          \n          <div class=\"space-y-6\">\n            <div class=\"relative\">\n              <input \n                v-model=\"formData.phone\" \n                type=\"tel\" \n                placeholder=\" \" \n                class=\"form-input peer\"\n                required\n              >\n              <label class=\"floating-label\">Phone Number</label>\n            </div>\n\n            <div class=\"relative\">\n              <input \n                v-model=\"formData.email\" \n                type=\"email\" \n                placeholder=\" \" \n                class=\"form-input peer\"\n                required\n              >\n              <label class=\"floating-label\">Email Address</label>\n            </div>\n\n            <div class=\"relative\">\n              <textarea \n                v-model=\"formData.address[currentLanguage]\" \n                placeholder=\" \" \n                rows=\"3\" \n                class=\"form-input resize-none peer\"\n                required\n              ></textarea>\n              <label class=\"floating-label\">Physical Address ({{ currentLanguage.toUpperCase() }})</label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Business Hours -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Business Hours</h2>\n          \n          <div class=\"space-y-4\">\n            <div v-for=\"(hours, day) in businessHours\" :key=\"day\" class=\"flex items-center space-x-4\">\n              <div class=\"w-24\">\n                <label class=\"text-sm font-medium text-gray-700\">{{ day }}</label>\n              </div>\n              <div class=\"flex-1\">\n                <input \n                  v-model=\"businessHours[day]\" \n                  type=\"text\" \n                  placeholder=\"e.g., 9:00 AM - 5:00 PM or Closed\"\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Map Embed -->\n        <div class=\"card p-6\">\n          <h2 class=\"text-xl font-bold text-gray-900 mb-6\">Map Integration</h2>\n          \n          <div class=\"space-y-4\">\n            <div class=\"relative\">\n              <input \n                v-model=\"form.mapEmbedUrl\" \n                type=\"url\" \n                placeholder=\" \" \n                class=\"form-input peer\"\n              >\n              <label class=\"floating-label\">Google Maps Embed URL (optional)</label>\n            </div>\n            <p class=\"text-sm text-gray-600\">\n              Go to Google Maps, search for your location, click \"Share\" ‚Üí \"Embed a map\" and paste the src URL here.\n            </p>\n          </div>\n        </div>\n\n        <!-- Save Button -->\n        <div class=\"flex justify-end space-x-4\">\n          <NuxtLink to=\"/agency-cms/manage\" class=\"btn-secondary\">Cancel</NuxtLink>\n          <button \n            type=\"submit\" \n            :disabled=\"saving\"\n            class=\"btn-primary\"\n          >\n            {{ saving ? 'Saving...' : 'Save Changes' }}\n          </button>\n        </div>\n      </form>\n    </div>\n\n    <!-- Success/Error Messages -->\n    <div v-if=\"successMessage\" class=\"fixed top-20 right-4 p-4 bg-green-50 border border-green-200 rounded-lg shadow-xl z-50\">\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-green-700 font-medium\">{{ successMessage }}</p>\n      </div>\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"fixed top-20 right-4 p-4 bg-red-50 border border-red-200 rounded-lg shadow-xl z-50\">\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-red-700 font-medium\">{{ errorMessage }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { API_ENDPOINTS, buildApiUrl } from '~/constants/api'\n\ndefinePageMeta({\n  middleware: 'auth',\n  layout: false\n})\n\nconst { logout } = useAuth()\nconst { getSiteSettings } = useCMS()\nconst siteSettings = await getSiteSettings()\n\n// Language state\nconst currentLanguage = ref('en')\n\n// Multi-language form data\nconst formData = reactive({\n  // Text fields as JSON {en: \"English\", th: \"Thai\"}\n  title: { en: '', th: '' },\n  subtitle: { en: '', th: '' },\n  address: { en: '', th: '' },\n  // Language-neutral fields\n  phone: '',\n  email: '',\n  mapEmbedUrl: '',\n  bannerImage: '',\n  heroImage: ''\n})\n\n// Business hours (separate reactive object for easier management)\nconst businessHours = reactive({\n  'Monday': '',\n  'Tuesday': '',\n  'Wednesday': '',\n  'Thursday': '',\n  'Friday': '',\n  'Saturday': '',\n  'Sunday': ''\n})\n\n// Component state\nconst loading = ref(true)\nconst saving = ref(false)\nconst successMessage = ref('')\nconst errorMessage = ref('')\n\n// Load existing content\nonMounted(async () => {\n  await loadContent()\n})\n\n// Helper function to parse JSON with fallback\nconst parseJsonField = (jsonString, fallback) => {\n  try {\n    const parsed = JSON.parse(jsonString || '{}')\n    return typeof parsed === 'object' && parsed !== null ? parsed : fallback\n  } catch {\n    return fallback\n  }\n}\n\nconst loadContent = async () => {\n  try {\n    const response = await $fetch(buildApiUrl(API_ENDPOINTS.CMS.CONTACT_CONTENT.GET))\n    \n    if (response) {\n      // Parse multi-language text fields\n      formData.title = parseJsonField(response.title, { en: '', th: '' })\n      formData.subtitle = parseJsonField(response.subtitle, { en: '', th: '' })\n      formData.address = parseJsonField(response.address, { en: '', th: '' })\n      \n      // Language-neutral fields\n      formData.phone = response.phone || ''\n      formData.email = response.email || ''\n      formData.mapEmbedUrl = response.mapEmbedUrl || ''\n      formData.heroImage = response.heroImage || ''\n      formData.bannerImage = response.bannerImage || ''\n      \n      // Parse business hours JSON\n      if (response.businessHours) {\n        try {\n          const hours = JSON.parse(response.businessHours)\n          Object.assign(businessHours, hours)\n        } catch (e) {\n          console.error('Failed to parse business hours:', e)\n        }\n      }\n    }\n  } catch (error) {\n    errorMessage.value = 'Failed to load content'\n    console.error('Failed to load content:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst handleSubmit = async () => {\n  saving.value = true\n  successMessage.value = ''\n  errorMessage.value = ''\n\n  try {\n    // Prepare form data with JSON stringified multi-language fields\n    const payload = {\n      // Multi-language fields as JSON strings\n      title: JSON.stringify(formData.title),\n      subtitle: JSON.stringify(formData.subtitle),\n      address: JSON.stringify(formData.address),\n      // Language-neutral fields\n      phone: formData.phone,\n      email: formData.email,\n      mapEmbedUrl: formData.mapEmbedUrl,\n      heroImage: formData.heroImage,\n      bannerImage: formData.bannerImage,\n      businessHours: JSON.stringify(businessHours)\n    }\n\n    await $fetch(buildApiUrl(API_ENDPOINTS.CMS.CONTACT_CONTENT.POST), {\n      method: 'POST',\n      body: payload\n    })\n\n    successMessage.value = 'Contact page content updated successfully!'\n  } catch (error) {\n    errorMessage.value = 'Failed to update content. Please try again.'\n    console.error('Failed to update content:', error)\n  } finally {\n    saving.value = false\n  }\n}\n\nconst handleLogout = async () => {\n  await logout()\n}\n\n// Clear messages after 5 seconds\nwatch([successMessage, errorMessage], () => {\n  if (successMessage.value || errorMessage.value) {\n    setTimeout(() => {\n      successMessage.value = ''\n      errorMessage.value = ''\n    }, 5000)\n  }\n})\n\n// SEO\nuseSeoMeta({\n  title: `Edit Contact Page | ${siteSettings.siteName} CMS`,\n  robots: 'noindex, nofollow'\n})\n</script>"],"version":3}
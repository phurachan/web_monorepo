{"file":"faqs-BKm-QeF2.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAoMmB,YAAO;AAC1B,UAAM,EAAE,gBAAe,IAAK,OAAM;AAClC,UAAM,gBAAe,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,gBAAe,CAAC;AAG3C,UAAM,OAAO,IAAI,CAAA,CAAE;AACnB,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,SAAS,IAAI,KAAK;AACxB,UAAM,YAAY,IAAI,KAAK;AAC3B,UAAM,aAAa,IAAI,IAAI;AAC3B,UAAM,iBAAiB,IAAI,EAAE;AAC7B,UAAM,eAAe,IAAI,EAAE;AAG3B,UAAM,UAAU,SAAS;AAAA,MACvB,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,IACZ,CAAC;AAkHD,UAAM,aAAa,CAAC,eAAe;AACjC,aAAO,IAAI,KAAK,UAAU,EAAE,mBAAkB;AAAA,IAChD;AAOA,UAAM,CAAC,gBAAgB,YAAY,GAAG,MAAM;AAC1C,UAAI,eAAe,SAAS,aAAa,OAAO;AAC9C,mBAAW,MAAM;AACf,yBAAe,QAAQ;AACvB,uBAAa,QAAQ;AAAA,QACvB,GAAG,GAAI;AAAA,MACT;AAAA,IACF,CAAC;AAGD,eAAW;AAAA,MACT,OAAO,iBAAiB,aAAa,QAAQ;AAAA,MAC7C,QAAQ;AAAA,IACV,CAAC;;;AA9VM,YAAA,OAAAC,eAAAC,WAAA,EAAA,OAAM,6BAAyB,MAAA,CAAA,CAAA,6LAAA;;QAMhB,IAAG;AAAA,QAAqB,OAAM;AAAA;yBAAxC,CAIW,GAAAC,QAAAC,UAAA,aAAA;;;;;4BAHTC,YAEM,OAAA;AAAA,gBAFD,OAAM;AAAA,gBAAU,MAAK;AAAA,gBAAO,QAAO;AAAA,gBAAe,SAAQ;AAAA;gBAC7DC,YAA6G,QAAA;AAAA,kBAAvG,kBAAe;AAAA,kBAAQ,mBAAgB;AAAA,kBAAQ,gBAAa;AAAA,kBAAI,GAAE;AAAA;;;;;;;;UAgBvEC,MAAA,OAAA,GAAO;;;;AAMGC,sBAAAD,MAAA,IAAA,IAAP,QAAG;AAIwC,gBAAA,qLAAAE,eAAA,IAAI,QAAQ,CAAA,OAAA;AAC9C,cAAA,CAAA,IAAI,UAAQ;;;;;uDAGMA,eAAA,IAAI,MAAM,oFAGzBA,eAAA,IAAI,KAAK,uDAEP,WAAW,IAAI,SAAS,CAAA,obAgBlCC,eAAA,CAAA,IAAI,WAAQ,uCAAA,oCAAA,gBAAA,CAAA;AAGT,cAAA,IAAI,UAAQ;;;;;;;;AAqBpB,YAAAH,MAAA,IAAA,EAAK,WAAM,GAAA;;;;;;;;UAYfA,MAAA,SAAA,GAAS;4TAKPA,MAAA,UAAA,IAAU,aAAA,aAAA,qTAYFI,cAAA,SAAAJ,MAAA,OAAA,EAAQ,QAAQ,4NAWhBE,eAAAF,MAAA,OAAA,EAAQ,MAAM,iIAYLI,cAAA,SAAAJ,MAAA,OAAA,EAAQ,KAAK,2KAWpBK,sBAAA,MAAA,QAAAL,MAAA,OAAA,EAAQ,QAAQ,IAAhBM,gBAAAN,MAAA,OAAA,EAAQ,UAAQ,IAAA,IAAhBA,MAAA,OAAA,EAAQ,QAAQ,IAAA,aAAA,oWAWIA,MAAA,MAAA,CAAM,IAAA,cAAA,yCAClCA,MAAA,MAAA,IAAM,cAAA,UAAA;;;;UASVA,MAAA,cAAA,GAAc;6aAKoBA,MAAA,cAAA,CAAc,CAAA,kBAAA;AAAA;;;UAIhDA,MAAA,YAAA,GAAY;yaAKoBA,MAAA,YAAA,CAAY,CAAA,kBAAA;AAAA;;;;;;;;;;;;;","names":["_withAsyncContext","_ssrRenderAttrs","_mergeProps","_push","_parent","_createBlock","_createVNode","_unref","_ssrRenderList","_ssrInterpolate","_ssrRenderClass","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrLooseContain"],"sources":["../../../../../digital-agency/pages/agency-cms/manage/faqs.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- Navigation -->\n    <nav class=\"bg-white shadow-sm border-b\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center py-4\">\n          <div class=\"flex items-center space-x-4\">\n            <NuxtLink to=\"/agency-cms/manage\" class=\"text-blue-600 hover:text-blue-500\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path>\n              </svg>\n            </NuxtLink>\n            <h1 class=\"text-xl font-semibold text-gray-900\">Manage FAQs</h1>\n          </div>\n          \n          <div class=\"flex items-center space-x-4\">\n            <button @click=\"openAddModal\" class=\"btn-primary\">Add FAQ</button>\n            <button @click=\"handleLogout\" class=\"btn-secondary\">Logout</button>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Loading State -->\n      <div v-if=\"loading\" class=\"flex justify-center items-center h-64\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- FAQs List -->\n      <div v-else class=\"space-y-6\">\n        <div v-for=\"faq in faqs\" :key=\"faq.id\" class=\"card p-6\">\n          <div class=\"flex items-start justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-3 mb-3\">\n                <h3 class=\"text-xl font-bold text-gray-900\">{{ faq.question }}</h3>\n                <span v-if=\"!faq.isActive\" class=\"px-2 py-1 bg-gray-200 text-gray-600 text-xs rounded-full\">Inactive</span>\n              </div>\n              \n              <p class=\"text-gray-600 mb-4\">{{ faq.answer }}</p>\n              \n              <div class=\"flex items-center space-x-4 text-sm text-gray-500\">\n                <span>Order: {{ faq.order }}</span>\n                <span>â€¢</span>\n                <span>Updated: {{ formatDate(faq.updatedAt) }}</span>\n              </div>\n            </div>\n\n            <div class=\"flex items-center space-x-2 ml-4\">\n              <button \n                @click=\"editFaq(faq)\"\n                class=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n              >\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                </svg>\n              </button>\n              \n              <button \n                @click=\"toggleFaqStatus(faq)\"\n                :class=\"faq.isActive ? 'text-yellow-600 hover:bg-yellow-50' : 'text-green-600 hover:bg-green-50'\"\n                class=\"p-2 rounded-lg\"\n              >\n                <svg v-if=\"faq.isActive\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\"></path>\n                </svg>\n                <svg v-else class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n              </button>\n              \n              <button \n                @click=\"deleteFaq(faq)\"\n                class=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n              >\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Empty State -->\n        <div v-if=\"faqs.length === 0\" class=\"text-center py-12\">\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No FAQs</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">Get started by creating your first FAQ.</p>\n          <button @click=\"openAddModal\" class=\"btn-primary mt-4\">Add FAQ</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- FAQ Modal -->\n    <div v-if=\"showModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div class=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        <div class=\"p-6\">\n          <div class=\"flex justify-between items-center mb-6\">\n            <h2 class=\"text-xl font-bold text-gray-900\">\n              {{ editingFaq ? 'Edit FAQ' : 'Add New FAQ' }}\n            </h2>\n            <button @click=\"closeModal\" class=\"text-gray-400 hover:text-gray-600\">\n              <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n              </svg>\n            </button>\n          </div>\n\n          <form @submit.prevent=\"saveFaq\" class=\"space-y-6\">\n            <div class=\"relative\">\n              <input \n                v-model=\"faqForm.question\" \n                type=\"text\" \n                placeholder=\" \" \n                class=\"form-input peer\"\n                required\n              >\n              <label class=\"floating-label\">Question</label>\n            </div>\n\n            <div class=\"relative\">\n              <textarea \n                v-model=\"faqForm.answer\" \n                placeholder=\" \" \n                rows=\"4\" \n                class=\"form-input resize-none peer\"\n                required\n              ></textarea>\n              <label class=\"floating-label\">Answer</label>\n            </div>\n\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div class=\"relative\">\n                <input \n                  v-model.number=\"faqForm.order\" \n                  type=\"number\" \n                  placeholder=\" \" \n                  class=\"form-input peer\"\n                  min=\"0\"\n                >\n                <label class=\"floating-label\">Display Order</label>\n              </div>\n\n              <div class=\"flex items-center space-x-3\">\n                <input \n                  v-model=\"faqForm.isActive\" \n                  type=\"checkbox\" \n                  id=\"isActive\"\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                >\n                <label for=\"isActive\" class=\"text-sm font-medium text-gray-700\">Active</label>\n              </div>\n            </div>\n\n            <div class=\"flex justify-end space-x-4 pt-4 border-t\">\n              <button @click=\"closeModal\" type=\"button\" class=\"btn-secondary\">Cancel</button>\n              <button type=\"submit\" :disabled=\"saving\" class=\"btn-primary\">\n                {{ saving ? 'Saving...' : 'Save FAQ' }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <!-- Success/Error Messages -->\n    <div v-if=\"successMessage\" class=\"fixed top-20 right-4 p-4 bg-green-50 border border-green-200 rounded-lg shadow-xl z-50\">\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-green-700 font-medium\">{{ successMessage }}</p>\n      </div>\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"fixed top-20 right-4 p-4 bg-red-50 border border-red-200 rounded-lg shadow-xl z-50\">\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <p class=\"text-red-700 font-medium\">{{ errorMessage }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { API_ENDPOINTS, buildApiUrl } from '~/constants/api'\n\ndefinePageMeta({\n  middleware: 'auth',\n  layout: false\n})\n\nconst { logout } = useAuth()\nconst { getSiteSettings } = useCMS()\nconst siteSettings = await getSiteSettings()\n\n// Data\nconst faqs = ref([])\nconst loading = ref(true)\nconst saving = ref(false)\nconst showModal = ref(false)\nconst editingFaq = ref(null)\nconst successMessage = ref('')\nconst errorMessage = ref('')\n\n// FAQ form\nconst faqForm = reactive({\n  question: '',\n  answer: '',\n  order: 0,\n  isActive: true\n})\n\n// Methods\nonMounted(async () => {\n  await loadFaqs()\n})\n\nconst loadFaqs = async () => {\n  try {\n    const data = await $fetch(buildApiUrl(API_ENDPOINTS.CMS.FAQS.GET))\n    faqs.value = data\n  } catch (error) {\n    errorMessage.value = 'Failed to load FAQs'\n  } finally {\n    loading.value = false\n  }\n}\n\nconst openAddModal = () => {\n  editingFaq.value = null\n  resetForm()\n  showModal.value = true\n}\n\nconst editFaq = (faq) => {\n  editingFaq.value = faq\n  faqForm.question = faq.question\n  faqForm.answer = faq.answer\n  faqForm.order = faq.order\n  faqForm.isActive = faq.isActive\n  showModal.value = true\n}\n\nconst closeModal = () => {\n  showModal.value = false\n  editingFaq.value = null\n  resetForm()\n}\n\nconst resetForm = () => {\n  faqForm.question = ''\n  faqForm.answer = ''\n  faqForm.order = 0\n  faqForm.isActive = true\n}\n\nconst saveFaq = async () => {\n  saving.value = true\n  successMessage.value = ''\n  errorMessage.value = ''\n\n  try {\n    const faqData = {\n      question: faqForm.question,\n      answer: faqForm.answer,\n      order: faqForm.order,\n      isActive: faqForm.isActive\n    }\n\n    if (editingFaq.value) {\n      await $fetch(buildApiUrl(API_ENDPOINTS.CMS.FAQS.PUT(editingFaq.value.id)), {\n        method: 'PUT',\n        body: faqData\n      })\n      successMessage.value = 'FAQ updated successfully!'\n    } else {\n      await $fetch(buildApiUrl(API_ENDPOINTS.CMS.FAQS.POST), {\n        method: 'POST',\n        body: faqData\n      })\n      successMessage.value = 'FAQ created successfully!'\n    }\n\n    closeModal()\n    await loadFaqs()\n  } catch (error) {\n    errorMessage.value = 'Failed to save FAQ'\n  } finally {\n    saving.value = false\n  }\n}\n\nconst toggleFaqStatus = async (faq) => {\n  try {\n    await $fetch(buildApiUrl(API_ENDPOINTS.CMS.FAQS.PUT(faq.id)), {\n      method: 'PUT',\n      body: {\n        ...faq,\n        isActive: !faq.isActive\n      }\n    })\n    \n    successMessage.value = `FAQ ${faq.isActive ? 'deactivated' : 'activated'} successfully!`\n    await loadFaqs()\n  } catch (error) {\n    errorMessage.value = 'Failed to update FAQ status'\n  }\n}\n\nconst deleteFaq = async (faq) => {\n  if (confirm(`Are you sure you want to delete this FAQ: \"${faq.question}\"?`)) {\n    try {\n      await $fetch(buildApiUrl(API_ENDPOINTS.CMS.FAQS.DELETE(faq.id)), {\n        method: 'DELETE'\n      })\n      \n      successMessage.value = 'FAQ deleted successfully!'\n      await loadFaqs()\n    } catch (error) {\n      errorMessage.value = 'Failed to delete FAQ'\n    }\n  }\n}\n\nconst formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString()\n}\n\nconst handleLogout = async () => {\n  await logout()\n}\n\n// Clear messages after 5 seconds\nwatch([successMessage, errorMessage], () => {\n  if (successMessage.value || errorMessage.value) {\n    setTimeout(() => {\n      successMessage.value = ''\n      errorMessage.value = ''\n    }, 5000)\n  }\n})\n\n// SEO\nuseSeoMeta({\n  title: `Manage FAQs | ${siteSettings.siteName} CMS`,\n  robots: 'noindex, nofollow'\n})\n</script>"],"version":3}
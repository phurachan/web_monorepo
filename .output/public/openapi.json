{
  "openapi": "3.0.3",
  "info": {
    "title": "Web Admin Base API",
    "description": "Comprehensive API documentation for Nuxt 4.1.1 admin panel with user management, authentication, and role-based access control",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://web-admin-base.vercel.app/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345678"
          },
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Senior Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["64f123456789abcd12345679"]
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345679"
          },
          "name": {
            "type": "string",
            "example": "ผู้ดูแลระบบ"
          },
          "description": {
            "type": "string",
            "example": "System Administrator with full access"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["user.create", "user.read", "user.update", "user.delete"]
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdBy": {
            "type": "string",
            "example": "64f123456789abcd12345678"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345680"
          },
          "name": {
            "type": "string",
            "example": "user.create"
          },
          "description": {
            "type": "string",
            "example": "Create new users"
          },
          "module": {
            "type": "string",
            "example": "user-management"
          },
          "action": {
            "type": "string",
            "enum": ["create", "read", "update", "delete", "access", "hr_view", "approve", "reject", "balance_manage", "export", "submit", "reports"],
            "example": "create"
          },
          "resource": {
            "type": "string",
            "example": "user"
          },
          "type": {
            "type": "string",
            "enum": ["menu", "action", "input"],
            "example": "action"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "total": {
            "type": "integer",
            "example": 100
          },
          "pages": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": true
          },
          "statusCode": {
            "type": "integer",
            "example": 400
          },
          "statusMessage": {
            "type": "string",
            "description": "i18n constant key for error message",
            "example": "REQUIRED_FIELDS_MISSING"
          },
          "message": {
            "type": "string",
            "description": "i18n constant key for error message",
            "example": "REQUIRED_FIELDS_MISSING"
          },
          "data": {
            "type": "object",
            "properties": {
              "messages": {
                "type": "object",
                "properties": {
                  "th": {
                    "type": "string",
                    "example": "ข้อมูลจำเป็นขาดหายไป"
                  },
                  "en": {
                    "type": "string",
                    "example": "Required fields are missing"
                  }
                }
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of i18n constant keys for specific validation errors",
                "example": ["FIELD_EMAIL_REQUIRED", "FIELD_PASSWORD_REQUIRED"]
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          }
        }
      },
      "UserCreateRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["64f123456789abcd12345679"]
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Senior Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["64f123456789abcd12345679"]
          }
        }
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "Number of items per page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "SearchParam": {
        "name": "search",
        "in": "query",
        "description": "Search term",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user and return JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User registration",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Get authenticated user profile",
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get users list",
        "description": "Retrieve paginated list of users with filtering and search",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "filter[role]",
            "in": "query",
            "description": "Filter by role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[isActive]",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[department]",
            "in": "query",
            "description": "Filter by department",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Management"],
        "summary": "Create user",
        "description": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User Management"],
        "summary": "Update user",
        "description": "Update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete user",
        "description": "Soft delete a user (set isActive to false)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["Role Management"],
        "summary": "Get roles list",
        "description": "Retrieve paginated list of roles with filtering",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "filter[isActive]",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Roles list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Role"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Role Management"],
        "summary": "Create role",
        "description": "Create a new role",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ผู้จัดการฝ่ายขาย"
                  },
                  "description": {
                    "type": "string",
                    "example": "Sales Manager with team management permissions"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["user.read", "report.view"]
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": ["Role Management"],
        "summary": "Get role by ID",
        "description": "Retrieve a specific role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Role ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Role Management"],
        "summary": "Update role",
        "description": "Update an existing role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Role ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ผู้จัดการฝ่ายขาย"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["user.read", "report.view", "user.update"]
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Role Management"],
        "summary": "Delete role",
        "description": "Delete a role (only if no users are assigned)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Role ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete role - users assigned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles/seed": {
      "post": {
        "tags": ["Role Management"],
        "summary": "Seed roles",
        "description": "Seed initial Thai roles and permissions",
        "security": [],
        "responses": {
          "201": {
            "description": "Roles seeded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": ["Permission Management"],
        "summary": "Get permissions list",
        "description": "Retrieve paginated list of permissions with filtering",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "filter[module]",
            "in": "query",
            "description": "Filter by module",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[action]",
            "in": "query",
            "description": "Filter by action",
            "schema": {
              "type": "string",
              "enum": ["create", "read", "update", "delete", "access", "hr_view", "approve", "reject", "balance_manage", "export", "submit", "reports"]
            }
          },
          {
            "name": "filter[type]",
            "in": "query",
            "description": "Filter by type",
            "schema": {
              "type": "string",
              "enum": ["menu", "action", "input"]
            }
          },
          {
            "name": "filter[isActive]",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Permission"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Permission Management"],
        "summary": "Create permission",
        "description": "Create a new permission",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "module", "action", "resource"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "user.export"
                  },
                  "description": {
                    "type": "string",
                    "example": "Export user data to various formats"
                  },
                  "module": {
                    "type": "string",
                    "example": "user-management"
                  },
                  "action": {
                    "type": "string",
                    "enum": ["create", "read", "update", "delete", "access", "hr_view", "approve", "reject", "balance_manage", "export", "submit", "reports"],
                    "example": "export"
                  },
                  "resource": {
                    "type": "string",
                    "example": "user"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["menu", "action", "input"],
                    "example": "action"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Permission"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "tags": ["Permission Management"],
        "summary": "Get permission by ID",
        "description": "Retrieve a specific permission by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Permission ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Permission"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Permission Management"],
        "summary": "Update permission",
        "description": "Update an existing permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Permission ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "user.export"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "module": {
                    "type": "string",
                    "example": "user-management"
                  },
                  "action": {
                    "type": "string",
                    "enum": ["create", "read", "update", "delete", "access", "hr_view", "approve", "reject", "balance_manage", "export", "submit", "reports"],
                    "example": "export"
                  },
                  "resource": {
                    "type": "string",
                    "example": "user"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["menu", "action", "input"],
                    "example": "action"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Permission"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Permission Management"],
        "summary": "Delete permission",
        "description": "Delete a permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Permission ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/seed": {
      "post": {
        "tags": ["Permission Management"],
        "summary": "Seed permissions",
        "description": "Seed comprehensive permission set with 47 initial permissions",
        "security": [],
        "responses": {
          "201": {
            "description": "Permissions seeded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/modules": {
      "get": {
        "tags": ["Permission Management"],
        "summary": "Get distinct modules",
        "description": "Get list of distinct permission modules",
        "responses": {
          "200": {
            "description": "Modules list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["dashboard", "user-management", "role-management"]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/permissions/status": {
      "get": {
        "tags": ["Permission Management"],
        "summary": "Get system status",
        "description": "Get permission system status overview",
        "responses": {
          "200": {
            "description": "System status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "totalPermissions": {
                              "type": "integer",
                              "example": 47
                            },
                            "activePermissions": {
                              "type": "integer",
                              "example": 45
                            },
                            "totalModules": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "User Management",
      "description": "User CRUD operations and management"
    },
    {
      "name": "Role Management",
      "description": "Role-based access control operations"
    },
    {
      "name": "Permission Management",
      "description": "Permission management and assignment"
    }
  ]
}